package com.hkd.ithome.viewpager;import java.text.DateFormat;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;import me.maxwin.view.XListView;import me.maxwin.view.XListView.IXListViewListener;import com.example.ithome.R;import com.hkd.ithome.adapter.NewsAdapter;import com.lidroid.xutils.ViewUtils;import com.lidroid.xutils.view.annotation.ViewInject;import android.os.Bundle;import android.os.Handler;import android.support.v4.app.Fragment;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;public class viewPagerLastest extends Fragment implements IXListViewListener {	@ViewInject(R.id.xListView)	XListView xListView;	//头部幻灯片	View headerNews, vpNewsOne, vpNewsTwo;	ArrayList<View> headerLists;	ViewPager vpHeader;	public static final int LOADMORE_OVER = 0;// 上拉加载下一页完成	public static final int REFISH_OVER = 1;// 下拉刷新完成	private boolean threadIsRun = false;	NewsAdapter newsAdapter;	ArrayList<HashMap<String, String>> newsDatas;	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		// TODO Auto-generated method stub		View v = inflater.inflate(R.layout.viewpager_lastest, null);		ViewUtils.inject(this, v);		xListView.setXListViewListener(this);				headerNews=getActivity().getLayoutInflater().inflate(R.layout.header_news,null);		vpHeader=(ViewPager) headerNews.findViewById(R.id.vpHeader);		vpNewsOne=getActivity().getLayoutInflater().inflate(R.layout.viewpager_header_news_one, null);		vpNewsTwo=getActivity().getLayoutInflater().inflate(R.layout.viewpager_header_news_two, null);		headerLists=new ArrayList<View>();		headerLists.add(vpNewsOne);		headerLists.add(vpNewsTwo);		vpHeader.setAdapter(HeaderNewsAdapter); 		xListView.addHeaderView(headerNews);				newsDatas = new ArrayList<HashMap<String, String>>();		HashMap<String, String> map;		for (int i = 0; i < 10; i++) {			map = new HashMap<String, String>();			map.put("title", "手机发布会介绍");			newsDatas.add(map);		}		newsAdapter = new NewsAdapter(getActivity(), newsDatas);		xListView.setAdapter(newsAdapter);		return v;	}	@Override	public void onRefresh() {		System.out.println("-----onRefresh");		// 下拉执行		if (!threadIsRun) {			System.out.println("-----onLoadMore");			threadIsRun = true;			/*			 * 1.获取下一页数据 2.刷新适配器			 */			Thread t = new Thread(new Runnable() {				@Override				public void run() {					try {						Thread.sleep(2000);					} catch (InterruptedException e) {						// TODO Auto-generated catch block						e.printStackTrace();					}					// mDatas.clear();					// addDatas();					handler.sendEmptyMessage(REFISH_OVER);				}			});			t.start();		}	}	@Override	public void onLoadMore() {		// 下拉执行		if (!threadIsRun) {			System.out.println("-----onLoadMore");			threadIsRun = true;			/*			 * 1.获取下一页数据 2.刷新适配器			 */			Thread t = new Thread(new Runnable() {				@Override				public void run() {					try {						Thread.sleep(2000);					} catch (InterruptedException e) {						// TODO Auto-generated catch block						e.printStackTrace();					}					// mDatas.clear();					// addDatas();					handler.sendEmptyMessage(REFISH_OVER);				}			});			t.start();		}	}	Handler handler = new Handler() {		public void handleMessage(android.os.Message msg) {			switch (msg.what) {			case REFISH_OVER:			case LOADMORE_OVER:				threadIsRun = false;				// favoriteAdapter.notifyDataSetChanged();				xListView.stopLoadMore();				xListView.stopRefresh();				System.out.println("stop==========");				Date date = new Date();				DateFormat format = new SimpleDateFormat("HH:mm:ss");				String time = format.format(date);				xListView.setRefreshTime(time);				break;			default:				break;			}		};	};			//顶部幻灯片适配器	PagerAdapter HeaderNewsAdapter = new PagerAdapter() {		@Override		public boolean isViewFromObject(View arg0, Object arg1) {			// TODO Auto-generated method stub			return arg0 == arg1;		}		@Override		public void destroyItem(ViewGroup container, int position, Object object) {			// TODO Auto-generated method stub			container.removeView(headerLists.get(position));		}		@Override		public Object instantiateItem(ViewGroup container, int position) {			// TODO Auto-generated method stub			View v = headerLists.get(position);			container.addView(v);			return v;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return headerLists.size();		}	};}