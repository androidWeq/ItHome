package com.hkd.ithome.fragment;import java.util.ArrayList;import java.util.List;import me.maxwin.view.XListView;import me.maxwin.view.XListView.IXListViewListener;import com.example.ithome.R;import com.hkd.ithome.adapter.HotGoodsListViewAdapter;import com.lidroid.xutils.ViewUtils;import com.lidroid.xutils.view.annotation.ViewInject;import android.content.Context;import android.os.Bundle;import android.os.Handler;import android.support.v4.app.Fragment;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;public class HotgoodsFragment extends Fragment implements OnClickListener,		IXListViewListener, OnItemClickListener {	View view;	ViewPager viewPager;// 辣品大的viewPager	XListView quanBuListView, baoPinListView;// viewPager的子页面里面的xlistview	ArrayList<View> viewPagers;// viewPager的子页面	private final static int QUANBU_VIEWPAGER = 0;// viewPager的全部子界面	private final static int BAOPIN_VIEWPAGER = 1;// viewPager的爆品子界面	List<String> quanBuDatas; // xlistView的模拟数据源	HotGoodsListViewAdapter adapter;// xlistView的适配器	ArrayList<TextView> lapinTitleTxts;	int indexCount = 0;// 记录当前在哪一个viewPager子界面,方便刷新该子界面的listview	private Handler handler;	// listViewHead的组件	View listViewHeadView;	ViewPager quanBuListViewHeadViewPager;	TextView quanBuListViewHeadTitle;	ImageView quanBuListViewImg1, quanBuListViewImg2, quanBuListViewImg3;	ArrayList<View> smallViewPagerDatas;// 小viewPager的子界面集合	ArrayList<ImageView> quanBuListViewHeadImgs;// head头部切换图片小圆点的集合	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		view = inflater.inflate(R.layout.fragment_hotgoods, null);		// ViewUtils.inject(this, view);		handler = new Handler();		init();		initViewPager();		viewPager.setOnPageChangeListener(new OnPageChangeListener() {			// arg0 当前切换到的viewPager的页码			public void onPageSelected(int arg0) {				switch (arg0) {				case QUANBU_VIEWPAGER:					// 记录当前再哪一个viewPager					indexCount = QUANBU_VIEWPAGER;					if (adapter != null) {						quanBuDatas.add(quanBuDatas.size() + "aa");						adapter.notifyDataSetChanged();					} else {											}					break;				case BAOPIN_VIEWPAGER:					indexCount = BAOPIN_VIEWPAGER;					if (adapter != null) {						quanBuDatas.add(quanBuDatas.size() + "bb");						adapter.notifyDataSetChanged();					} else {											}					break;				default:					break;				}			}			public void onPageScrolled(int arg0, float arg1, int arg2) {							}			public void onPageScrollStateChanged(int arg0) {			}		});		quanBuListViewHeadViewPager				.setOnPageChangeListener(new OnPageChangeListener() {					public void onPageSelected(int arg0) {						// head的小圆点图片集合,切换形式						for (int i = 0; i < quanBuListViewHeadImgs.size(); i++) {							if (i == arg0) {								quanBuListViewHeadImgs										.get(i)										.setImageDrawable(												getResources()														.getDrawable(																R.drawable.indicator_unactive_noimg));							} else {								quanBuListViewHeadImgs.get(i).setImageDrawable(										getResources().getDrawable(												R.drawable.indicator_unactive));							}						}						// headtextView的切换显示						switch (arg0) {						case 0:							quanBuListViewHeadTitle									.setText("法撒旦发送飞飞鞍山发送飞啊");							break;						case 1:							quanBuListViewHeadTitle									.setText("个人的人格省份啊 发二娃发二娃分");							break;						default:							quanBuListViewHeadTitle									.setText(" 分公司的人工湖好v萨尔瓦分啊");							break;						}					}					@Override					public void onPageScrolled(int arg0, float arg1, int arg2) {						// TODO Auto-generated method stub					}					@Override					public void onPageScrollStateChanged(int arg0) {						// TODO Auto-generated method stub					}				});		return view;	}	private void init() {		viewPager = (ViewPager) view.findViewById(R.id.lapin_big_viewpager);		lapinTitleTxts = new ArrayList<TextView>();		TextView titleTxt1 = (TextView) view				.findViewById(R.id.lapin_title_txt1);		TextView titleTxt2 = (TextView) view				.findViewById(R.id.lapin_title_txt2);		lapinTitleTxts.add(titleTxt1);		lapinTitleTxts.add(titleTxt2);		titleTxt1.setOnClickListener(this);		titleTxt2.setOnClickListener(this);	}	/**	 * 大ViewPager的适配器	 */	private void initViewPager() {		if (viewPagers == null) {			viewPagers = new ArrayList<View>();		}		// viewPager子界面的获取		View quanBuViewPager = LayoutInflater.from(getActivity()).inflate(				R.layout.lapin_quanbu_viewpager, null);		View baoPinViewPager = LayoutInflater.from(getActivity()).inflate(				R.layout.lapin_baopin_viewpager, null);		// 子界面的xlistview的获取		quanBuListView = (XListView) quanBuViewPager				.findViewById(R.id.lapin_quanbu_viewpager_listview);		initListViewHead();		baoPinListView = (XListView) baoPinViewPager				.findViewById(R.id.lapin_baopin_viewpager_listview);		baoPinListView.setPullLoadEnable(true);		baoPinListView.setXListViewListener(this);		baoPinListView.setOnItemClickListener(this);		viewPagers.add(quanBuViewPager);		viewPagers.add(baoPinViewPager);		viewPager.setAdapter(pagerAdapter);		viewPager.setCurrentItem(0);		// 第一次加载xListView需要的数据源		if (quanBuDatas == null) {			quanBuDatas = new ArrayList<String>();			for (int i = 0; i < 10; i++) {				quanBuDatas.add(i + "");			}			adapter = new HotGoodsListViewAdapter(quanBuDatas, getActivity());			quanBuListView.addHeaderView(listViewHeadView);			quanBuListView.setAdapter(adapter);			baoPinListView.setAdapter(adapter);					}	}	/**	 * listViewHead头部组件的绑定	 */	private void initListViewHead() {		listViewHeadView = LayoutInflater.from(getActivity()).inflate(				R.layout.lapin_quanbu_smallviewpager, null);		quanBuListViewHeadViewPager = (ViewPager) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_viewpager);		quanBuListViewHeadTitle = (TextView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_title);		quanBuListViewImg1 = (ImageView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_img1);		quanBuListViewImg2 = (ImageView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_img2);		quanBuListViewImg3 = (ImageView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_img3);		quanBuListViewHeadImgs = new ArrayList<ImageView>();		quanBuListViewHeadImgs.add(quanBuListViewImg1);		quanBuListViewHeadImgs.add(quanBuListViewImg2);		quanBuListViewHeadImgs.add(quanBuListViewImg3);		// ��С��viewPager��ӽ���		View view1 = LayoutInflater.from(getActivity()).inflate(				R.layout.viewpager_item, null);		TextView txt1 = (TextView) view1.findViewById(R.id.viewpager_item_txt);		txt1.setText("界面一");		View view2 = LayoutInflater.from(getActivity()).inflate(				R.layout.viewpager_item, null);		TextView txt2 = (TextView) view2.findViewById(R.id.viewpager_item_txt);		txt2.setText("界面二");		View view3 = LayoutInflater.from(getActivity()).inflate(				R.layout.viewpager_item, null);		TextView txt3 = (TextView) view3.findViewById(R.id.viewpager_item_txt);		txt3.setText("界面三");		smallViewPagerDatas = new ArrayList<View>();		smallViewPagerDatas.add(view1);		smallViewPagerDatas.add(view2);		smallViewPagerDatas.add(view3);		// 绑定适配器		quanBuListViewHeadViewPager.setAdapter(smallPagerAdapter);		// 设置默认现实的额子界面		quanBuListViewHeadViewPager.setCurrentItem(0);	}	/**	 * 大ViewPager的适配器	 */	PagerAdapter pagerAdapter = new PagerAdapter() {		public boolean isViewFromObject(View arg0, Object arg1) {			return arg0 == arg1;		}		// 获取子界面的个数		public int getCount() {			return viewPagers.size();		}		// 移出子界面		public void destroyItem(ViewGroup container, int position, Object object) {			container.removeView(viewPagers.get(position));		}		// 加载子界面		public Object instantiateItem(ViewGroup container, int position) {			View view = viewPagers.get(position);			container.addView(view);			return view;		}	};	/**	 * smallViewPager的适配器	 */	PagerAdapter smallPagerAdapter = new PagerAdapter() {		public boolean isViewFromObject(View arg0, Object arg1) {			return arg0 == arg1;		}		// 获取子界面的个数		public int getCount() {			return smallViewPagerDatas.size();		}		// 移出子界面		public void destroyItem(ViewGroup container, int position, Object object) {			container.removeView(smallViewPagerDatas.get(position));		}		// 加载子界面		public Object instantiateItem(ViewGroup container, int position) {			View view = smallViewPagerDatas.get(position);			container.addView(view);			return view;		}	};	@Override	public void onClick(View v) {		switch (v.getId()) {		case R.id.lapin_title_txt1:			viewPager.setCurrentItem(0);			break;		case R.id.lapin_title_txt2:			viewPager.setCurrentItem(1);			break;		default:			break;		}	}	@Override	public void onItemClick(AdapterView<?> parent, View view, int position,			long id) {		// TODO Auto-generated method stub	}	@Override	public void onRefresh() {		handler.postDelayed(new Runnable() {			@Override			public void run() {				quanBuDatas.add(quanBuDatas.size() + "下拉刷新,头部");				adapter.notifyDataSetChanged();				onLoad();			}		}, 2000);	}	@Override	public void onLoadMore() {		handler.postDelayed(new Runnable() {			@Override			public void run() {				quanBuDatas.add(quanBuDatas.size() + "上拉刷新,底部");				adapter.notifyDataSetChanged();				onLoad();			}		}, 2000);	}	private void onLoad() {		switch (indexCount) {		case 0:			quanBuListView.stopRefresh();			quanBuListView.stopLoadMore();			quanBuListView.setRefreshTime("刚刚--全部");			break;		default:			baoPinListView.stopRefresh();			baoPinListView.stopLoadMore();			baoPinListView.setRefreshTime("刚刚--爆品");			break;		}	}}