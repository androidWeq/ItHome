package com.hkd.ithome.fragment;import java.util.ArrayList;import java.util.List;import com.example.ithome.R;import com.hkd.ithome.adapter.HotGoodsListViewAdapter;import com.lidroid.xutils.ViewUtils;import com.lidroid.xutils.view.annotation.ViewInject;import android.content.Context;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;public class HotgoodsFragment extends Fragment implements OnClickListener{	View view;		ViewPager viewPager;// 辣品最外层ViewPager	ListView quanBuListView, baoPinListView;// 全部界面,爆品界面	ArrayList<View> viewPagers;// view集合,用于添加到ViewPager	private final static int QUANBU_VIEWPAGER = 0;// 0代表全部viewpager	private final static int BAOPIN_VIEWPAGER = 1;// 1代表爆品viewpager	List<String> quanBuDatas; // 模拟ListView的数据	HotGoodsListViewAdapter adapter;// ListView的适配器	ArrayList<TextView> lapinTitleTxts;	 			// viewPager全部界面的listView头部的组件	View listViewHeadView;	ViewPager quanBuListViewHeadViewPager;	TextView quanBuListViewHeadTitle;	ImageView quanBuListViewImg1, quanBuListViewImg2, quanBuListViewImg3;	ArrayList<View> smallViewPagerDatas;//listviewHead的viewPager页面数据源	ArrayList<ImageView> quanBuListViewHeadImgs;//listViewhead小图片的集合	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		view = inflater.inflate(R.layout.fragment_hotgoods, null);		//ViewUtils.inject(this, view);				init();		initViewPager();		viewPager.setOnPageChangeListener(new OnPageChangeListener() {			// arg0 代表滑到的界面的值			public void onPageSelected(int arg0) {				switch (arg0) {				case QUANBU_VIEWPAGER:					if (adapter != null) {						quanBuDatas.add(quanBuDatas.size() + "aa");						adapter.notifyDataSetChanged();					} else {						System.out.println("---切换到全部界面adapter为空");					}										break;				case BAOPIN_VIEWPAGER:					if (adapter != null) {						quanBuDatas.add(quanBuDatas.size() + "bb");						adapter.notifyDataSetChanged();					} else {						System.out.println("---切换到爆品界面adapter为空");					}					break;				default:					break;				}			}			public void onPageScrolled(int arg0, float arg1, int arg2) {				// arg0=1代表开始滑动 arg0=2代表惯性滑动 arg0=0代表停止滑动			}			public void onPageScrollStateChanged(int arg0) {			}		});		quanBuListViewHeadViewPager				.setOnPageChangeListener(new OnPageChangeListener() {										public void onPageSelected(int arg0) {						//设置listViewHead头部的小图片						for (int i = 0; i < quanBuListViewHeadImgs.size(); i++) {							if (i == arg0) {								quanBuListViewHeadImgs										.get(i)										.setImageDrawable(												getResources()														.getDrawable(																R.drawable.indicator_unactive_noimg));							} else {								quanBuListViewHeadImgs.get(i).setImageDrawable(										getResources().getDrawable(												R.drawable.indicator_unactive));							}						}                        //设置listView头部的标题内容						switch (arg0) {						case 0:							quanBuListViewHeadTitle.setText("先科N-162金属小钢炮蓝牙音箱24.9元");							break;						case 1:							quanBuListViewHeadTitle.setText("森海塞尔MX365平头塞耳机99元");							break;						default:							quanBuListViewHeadTitle.setText("LG竹盐SG-963声波震动牙刷");							break;						}					}					@Override					public void onPageScrolled(int arg0, float arg1, int arg2) {						// TODO Auto-generated method stub					}					@Override					public void onPageScrollStateChanged(int arg0) {						// TODO Auto-generated method stub					}				});		return view;	}	private void init() {		viewPager=(ViewPager) view.findViewById(R.id.lapin_big_viewpager);		lapinTitleTxts=new ArrayList<TextView>();		TextView titleTxt1=(TextView) view.findViewById(R.id.lapin_title_txt1);		TextView titleTxt2=(TextView) view.findViewById(R.id.lapin_title_txt2);				lapinTitleTxts.add(titleTxt1);		lapinTitleTxts.add(titleTxt2);				titleTxt1.setOnClickListener(this);		titleTxt2.setOnClickListener(this);	}	/**	 * 初始化ViewPager	 */	private void initViewPager() {				if (viewPagers == null) {			viewPagers = new ArrayList<View>();		}		// 获得两个ViewPager界面		View quanBuViewPager = LayoutInflater.from(getActivity()).inflate(				R.layout.lapin_quanbu_viewpager, null);		View baoPinViewPager = LayoutInflater.from(getActivity()).inflate(				R.layout.lapin_baopin_viewpager, null);		// 获得ViewPager里的Listview		quanBuListView = (ListView) quanBuViewPager				.findViewById(R.id.lapin_quanbu_viewpager_listview);		initListViewHead();		baoPinListView = (ListView) baoPinViewPager				.findViewById(R.id.lapin_baopin_viewpager_listview);				viewPagers.add(quanBuViewPager);		viewPagers.add(baoPinViewPager);		viewPager.setAdapter(pagerAdapter);		viewPager.setCurrentItem(0);		// 获取向listView添加的数据		if (quanBuDatas == null) {			quanBuDatas = new ArrayList<String>();			for (int i = 0; i < 10; i++) {				quanBuDatas.add(i + "");			}			adapter = new HotGoodsListViewAdapter(quanBuDatas, getActivity());			quanBuListView.setAdapter(adapter);			baoPinListView.setAdapter(adapter);			quanBuListView.addHeaderView(listViewHeadView);		}	}	/**	 * 初始化quanBuListView的head	 */	private void initListViewHead() {		listViewHeadView = LayoutInflater.from(getActivity()).inflate(				R.layout.lapin_quanbu_smallviewpager, null);		quanBuListViewHeadViewPager = (ViewPager) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_viewpager);		quanBuListViewHeadTitle = (TextView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_title);		quanBuListViewImg1 = (ImageView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_img1);		quanBuListViewImg2 = (ImageView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_img2);		quanBuListViewImg3 = (ImageView) listViewHeadView				.findViewById(R.id.lapin_quanbu_listviewHead_img3);		quanBuListViewHeadImgs = new ArrayList<ImageView>();		quanBuListViewHeadImgs.add(quanBuListViewImg1);		quanBuListViewHeadImgs.add(quanBuListViewImg2);		quanBuListViewHeadImgs.add(quanBuListViewImg3);		// 向小的viewPager添加界面		View view1 = LayoutInflater.from(getActivity()).inflate(				R.layout.viewpager_item, null);		TextView txt1 = (TextView) view1.findViewById(R.id.viewpager_item_txt);		txt1.setText("页面一");		View view2 = LayoutInflater.from(getActivity()).inflate(				R.layout.viewpager_item, null);		TextView txt2 = (TextView) view2.findViewById(R.id.viewpager_item_txt);		txt2.setText("页面二");		View view3 = LayoutInflater.from(getActivity()).inflate(				R.layout.viewpager_item, null);		TextView txt3 = (TextView) view3.findViewById(R.id.viewpager_item_txt);		txt3.setText("页面三");		smallViewPagerDatas = new ArrayList<View>();		smallViewPagerDatas.add(view1);		smallViewPagerDatas.add(view2);		smallViewPagerDatas.add(view3);		// 设置smallViewPager的适配器		quanBuListViewHeadViewPager.setAdapter(smallPagerAdapter);		// 默认smallViewPager选择第一个界面		quanBuListViewHeadViewPager.setCurrentItem(0);	}	/**	 * bigViewPager的的适配器	 */	PagerAdapter pagerAdapter = new PagerAdapter() {		public boolean isViewFromObject(View arg0, Object arg1) {			return arg0 == arg1;		}		// 获得viewPager的个数		public int getCount() {			return viewPagers.size();		}		// 移除划出屏幕的view		public void destroyItem(ViewGroup container, int position, Object object) {			container.removeView(viewPagers.get(position));		}		// 加载滑入屏幕的view		public Object instantiateItem(ViewGroup container, int position) {			View view = viewPagers.get(position);			container.addView(view);			return view;		}	};	/**	 * smallViewPager的适配器	 */	PagerAdapter smallPagerAdapter = new PagerAdapter() {		public boolean isViewFromObject(View arg0, Object arg1) {			return arg0 == arg1;		}		// 获得viewPager的个数		public int getCount() {			return smallViewPagerDatas.size();		}		// 移除划出屏幕的view		public void destroyItem(ViewGroup container, int position, Object object) {			container.removeView(smallViewPagerDatas.get(position));		}		// 加载滑入屏幕的view		public Object instantiateItem(ViewGroup container, int position) {			View view = smallViewPagerDatas.get(position);			container.addView(view);			return view;		}	};	@Override	public void onClick(View v) {		switch (v.getId()) {		case R.id.lapin_title_txt1:			viewPager.setCurrentItem(0);			break;		case R.id.lapin_title_txt2:			viewPager.setCurrentItem(1);			break;		default:			break;		}			}}