package com.hkd.ithome.fragment;import java.util.ArrayList;import java.util.List;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentPagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.view.WindowManager;import android.widget.Button;import android.widget.HorizontalScrollView;import android.widget.ImageView;import android.widget.PopupWindow;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RadioGroup.OnCheckedChangeListener;import com.example.ithome.R;import com.hkd.ithome.viewpager.viewPagerLastest;import com.hkd.ithome.viewpager.viewPagerToplist;public class NewsFragment extends Fragment {	ViewPager viewpager;	HorizontalScrollView scrollview;	private List<Fragment> lists;	private FragmentPagerAdapter mAdapter;	viewPagerLastest viewPagerLastest;	viewPagerToplist viewPagerToplist;	RadioButton rbLastest, rbToplist, rbApple;	RadioButton[] list_button;	RadioGroup rgNews;	// Popwindow	ImageView btnMore;	View viewMoreCategory;	PopupWindow windowMoreCategory;	Button btnLastest;	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		View v = inflater.inflate(R.layout.fragment_news, null);		rgNews = (RadioGroup) v.findViewById(R.id.rgNews);		rbLastest = (RadioButton) v.findViewById(R.id.lasteast);		rbToplist = (RadioButton) v.findViewById(R.id.toplist);		rbApple = (RadioButton) v.findViewById(R.id.apple);		btnMore = (ImageView) v.findViewById(R.id.more);		// popwindow		viewMoreCategory = LayoutInflater.from(getActivity()).inflate(				R.layout.popwindow_news_more, null);		windowMoreCategory = new PopupWindow(viewMoreCategory,				WindowManager.LayoutParams.MATCH_PARENT, 950);		btnMore.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View arg0) {				// TODO Auto-generated method stub				showPopwindow();			}		});		// 左右滑动幻灯片		viewpager = (ViewPager) v.findViewById(R.id.viewPager);		lists = new ArrayList<Fragment>();		viewPagerLastest = new viewPagerLastest();		viewPagerToplist = new viewPagerToplist();		lists.add(viewPagerLastest);		lists.add(viewPagerToplist);		list_button = new RadioButton[] { rbLastest, rbToplist, rbApple };		mAdapter = new FragmentPagerAdapter(getChildFragmentManager()) {			@Override			public int getCount() {				return lists.size();			}			@Override			public Fragment getItem(int arg0) {				// TODO Auto-generated method stub				return lists.get(arg0);			}		};		viewpager.setAdapter(mAdapter);		viewpager.setOnPageChangeListener(new OnPageChangeListener() {			@Override			public void onPageSelected(int arg0) {				// TODO Auto-generated method stub				list_button[arg0].setChecked(true);				// scrollview.scrollTo((arg0 - 1) * 120, 0);			}			@Override			public void onPageScrolled(int arg0, float arg1, int arg2) {				// TODO Auto-generated method stub			}			@Override			public void onPageScrollStateChanged(int arg0) {				// TODO Auto-generated method stub			}		});		rgNews.setOnCheckedChangeListener(new OnCheckedChangeListener() {			@Override			public void onCheckedChanged(RadioGroup arg0, int arg1) {				// TODO Auto-generated method stub				switch (arg1) {				case R.id.lasteast:					viewpager.setCurrentItem(0);					break;				case R.id.toplist:					viewpager.setCurrentItem(1);					break;				default:					break;				}			}		});		return v;	}	public void showPopwindow() {		btnLastest=(Button) viewMoreCategory.findViewById(R.id.lasteast);		windowMoreCategory.setFocusable(true);		windowMoreCategory.setOutsideTouchable(true);		windowMoreCategory.setBackgroundDrawable(new BitmapDrawable());		windowMoreCategory.showAsDropDown(getActivity().findViewById(R.id.rgNews), 0 ,0);			}	public void setMenuVisibility(boolean menuVisible) {		// TODO Auto-generated method stub		super.setMenuVisibility(menuVisible);		if (this.getView() != null)			this.getView()					.setVisibility(menuVisible ? View.VISIBLE : View.GONE);	}}