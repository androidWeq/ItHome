package com.hkd.ithome.fragment;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import android.content.Intent;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentPagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup.LayoutParams;import android.view.animation.AnimationUtils;import android.view.animation.LinearInterpolator;import android.view.animation.RotateAnimation;import android.view.ViewGroup;import android.view.WindowManager;import android.widget.Button;import android.widget.HorizontalScrollView;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.PopupWindow;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import android.widget.RadioGroup.OnCheckedChangeListener;import com.example.ithome.R;import com.hkd.ithome.activities.ChannelActivity;import com.hkd.ithome.app.AppApplication;import com.hkd.ithome.bean.ChannelItem;import com.hkd.ithome.bean.ChannelManage;import com.hkd.ithome.bean.NewsClassify;import com.hkd.ithome.tools.BaseTools;import com.hkd.ithome.tools.Constants;import com.hkd.ithome.view.ColumnHorizontalScrollView;import com.hkd.ithome.viewpager.viewPagerLastest;import com.hkd.ithome.viewpager.viewPagerToplist;import com.lidroid.xutils.HttpUtils;import com.lidroid.xutils.exception.HttpException;import com.lidroid.xutils.http.ResponseInfo;import com.lidroid.xutils.http.callback.RequestCallBack;import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;public class NewsFragment extends Fragment {		View v;	ViewPager mViewPager;	HorizontalScrollView scrollview;	private List<Fragment> lists;	private FragmentPagerAdapter mAdapter;	viewPagerLastest viewPagerLastest;	viewPagerToplist viewPagerToplist;	RadioButton rbLastest, rbToplist, rbApple;	RadioButton[] list_button;	RadioGroup rgNews;	ImageView btnSearch;//	RelativeLayout lapinLoadingContent;// 加载动画页面//	ImageView lapinLoadingImg;// 加载旋转动画图片	// 频道管理	ImageView button_more_columns;	Button btnLastest;	/** 频道管理 自定义HorizontalScrollView */	private ColumnHorizontalScrollView mColumnHorizontalScrollView;	LinearLayout mRadioGroup_content;	LinearLayout ll_more_columns;	RelativeLayout rl_column;	/** 新闻分类列表 */	// private ArrayList<NewsClassify> newsClassify = new	// ArrayList<NewsClassify>();	private ArrayList<ChannelItem> userChannelList = new ArrayList<ChannelItem>();	/** 当前选中的栏目 */	private int columnSelectIndex = 0;	/** 左阴影部分 */	public ImageView shade_left;	/** 右阴影部分 */	public ImageView shade_right;	/** 屏幕宽度 */	private int mScreenWidth = 0;	/** Item宽度 */	private int mItemWidth = 0;	private ArrayList<Fragment> fragments = new ArrayList<Fragment>();	/** 请求CODE */	public final static int CHANNELREQUEST = 1;	/** 调整返回的RESULTCODE */	public final static int CHANNELRESULT = 10;	//测试网络	HttpUtils http;	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		v = inflater.inflate(R.layout.fragment_news, null);		mScreenWidth = BaseTools.getWindowsWidth(getActivity());		mItemWidth = mScreenWidth / 7;// 一个Item宽度为屏幕的1/7		/** 初始化layout控件 */		mColumnHorizontalScrollView = (ColumnHorizontalScrollView) v				.findViewById(R.id.mColumnHorizontalScrollView);		mRadioGroup_content = (LinearLayout) v				.findViewById(R.id.mRadioGroup_content);		ll_more_columns = (LinearLayout) v.findViewById(R.id.ll_more_columns);		rl_column = (RelativeLayout) v.findViewById(R.id.rl_column);		button_more_columns = (ImageView) v				.findViewById(R.id.button_more_columns);		mViewPager = (ViewPager) v.findViewById(R.id.viewPager);		shade_left = (ImageView) v.findViewById(R.id.shade_left);		shade_right = (ImageView) v.findViewById(R.id.shade_right);		// rgNews = (RadioGroup) v.findViewById(R.id.rgNews);		btnSearch=(ImageView) v.findViewById(R.id.search);		btnSearch.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View arg0) {				// TODO Auto-generated method stub							}		});		button_more_columns.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View arg0) {				// showPopwindow();				Intent intetnToChannel = new Intent(getActivity(),						ChannelActivity.class);				startActivityForResult(intetnToChannel, CHANNELREQUEST);				// overridePendingTransition(R.anim.slide_in_right,				// R.anim.slide_out_left);			}		});		setChangelView();		return v;	}	/**	 * 当栏目项发生变化时候调用	 * */	private void setChangelView() {		initColumnData();		initTabColumn();		initFragment();	}	/** 获取Column栏目 数据 */	private void initColumnData() {		// newsClassify = Constants.getData();		userChannelList = ((ArrayList<ChannelItem>) ChannelManage.getManage(				AppApplication.getApp().getSQLHelper()).getUserChannel());	}	/**	 * 初始化Column栏目项	 * */	private void initTabColumn() {		mRadioGroup_content.removeAllViews();		int count = userChannelList.size();		mColumnHorizontalScrollView.setParam(getActivity(), mScreenWidth,				mRadioGroup_content, shade_left, shade_right, ll_more_columns,				rl_column);		for (int i = 0; i < count; i++) {			LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(					mItemWidth, LayoutParams.WRAP_CONTENT);			params.leftMargin = 10;			params.rightMargin = 10;			// TextView localTextView = (TextView)			// mInflater.inflate(R.layout.column_radio_item, null);			TextView localTextView = new TextView(getActivity());			localTextView.setTextAppearance(getActivity(),					R.style.top_category_scroll_view_item_text);			// localTextView.setBackground(getResources().getDrawable(R.drawable.top_category_scroll_text_view_bg));			localTextView.setBackgroundResource(R.drawable.radio_buttong_bg);			localTextView.setGravity(Gravity.CENTER);			localTextView.setPadding(5, 0, 5, 0);			localTextView.setId(i);			localTextView.setText(userChannelList.get(i).getName());			localTextView.setTextColor(getResources().getColorStateList(					R.color.top_category_scroll_text_color_day));			if (columnSelectIndex == i) {				localTextView.setSelected(true);			}			localTextView.setOnClickListener(new OnClickListener() {				@Override				public void onClick(View v) {					for (int i = 0; i < mRadioGroup_content.getChildCount(); i++) {						View localView = mRadioGroup_content.getChildAt(i);						if (localView != v)							localView.setSelected(false);						else {							localView.setSelected(true);							mViewPager.setCurrentItem(i);						}					}					// Toast.makeText(getActivity(),					// newsClassify.get(v.getId()).getTitle(),					// Toast.LENGTH_SHORT).show();				}			});			mRadioGroup_content.addView(localTextView, i, params);		}	}	/**	 * 选择的Column里面的Tab	 * */	private void selectTab(int tab_postion) {		columnSelectIndex = tab_postion;		for (int i = 0; i < mRadioGroup_content.getChildCount(); i++) {			View checkView = mRadioGroup_content.getChildAt(tab_postion);			int k = checkView.getMeasuredWidth();			int l = checkView.getLeft();			int i2 = l + k / 2 - mScreenWidth / 2;			// rg_nav_content.getParent()).smoothScrollTo(i2, 0);			mColumnHorizontalScrollView.smoothScrollTo(i2, 0);			// mColumnHorizontalScrollView.smoothScrollTo((position - 2) *			// mItemWidth , 0);		}		// 判断是否选中		for (int j = 0; j < mRadioGroup_content.getChildCount(); j++) {			View checkView = mRadioGroup_content.getChildAt(j);			boolean ischeck;			if (j == tab_postion) {				ischeck = true;			} else {				ischeck = false;			}			checkView.setSelected(ischeck);		}	}	/**	 * 初始化Fragment	 * */	private void initFragment() {		fragments.clear();//清空		int count = userChannelList.size();		for (int i = 0; i < count; i++) {			Bundle data = new Bundle();			data.putString("text", userChannelList.get(i).getName());			// data.putInt("id", userChannelList.get(i).getId());			viewPagerLastest = new viewPagerLastest();			viewPagerLastest.setArguments(data);			fragments.add(viewPagerLastest);		}		NewsFragmentPagerAdapter mAdapetr = new NewsFragmentPagerAdapter(				getActivity().getSupportFragmentManager(), fragments);		mViewPager.setAdapter(mAdapetr);		mViewPager.setOnPageChangeListener(pageListener);	}	/**	 * ViewPager切换监听方法	 * */	public OnPageChangeListener pageListener = new OnPageChangeListener() {		@Override		public void onPageScrollStateChanged(int arg0) {		}		@Override		public void onPageScrolled(int arg0, float arg1, int arg2) {		}		@Override		public void onPageSelected(int position) {			// TODO Auto-generated method stub			mViewPager.setCurrentItem(position);			System.out.println("position========"+position);			//存储当前资讯页viewpager的滑动页数			AppApplication.getApp().setNewspage(position);			selectTab(position);		}	};	@Override	public void onActivityResult(int requestCode, int resultCode, Intent data) {		// TODO Auto-generated method stub		System.out.println("setChangelView()"+resultCode);			if (resultCode == 0) {				//data.getIntExtra("back", 0);				setChangelView();			}		super.onActivityResult(requestCode, resultCode, data);	}	public void setMenuVisibility(boolean menuVisible) {		// TODO Auto-generated method stub		super.setMenuVisibility(menuVisible);		if (this.getView() != null)			this.getView()					.setVisibility(menuVisible ? View.VISIBLE : View.GONE);	}	}